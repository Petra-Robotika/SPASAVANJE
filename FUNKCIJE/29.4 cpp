void RobotLine::followWallAll() {

  static int zid = 0;
  char simbol[10 + sizeof(char)];

  bool desno = false;
  bool lijevo = false;


  if (frontRight() > 150 and frontLeft() > 150) {
    go(90, 90);
    bool desno = false;
    bool lijevo = false;
    bool nista = true;
  }


  else if (frontRight() > frontLeft()) {
    desno = false;
    lijevo = true;
    followWallLeft();

  }


  else if (frontRight() < frontLeft()) {
    desno = true;
    lijevo = false;
    followWallRight();
  }


  if (front() < 140 and front() > 80) {
    zid++;
    if (frontRight() > 150 and frontLeft() > 150 and zid < 3) {
      go(90, -90);
      delayMs(500);
    }

    else if (frontRight() > 150 and frontLeft() > 150 and zid >= 3) {
      go(-90, 90);
      delayMs(500);
    }
    else if (desno) {
      go(-90, 90);
      delayMs(500);
    }

    else {
      go(90, -90);
      delayMs(500);
    }
  }

  sprintf(simbol, "%d", zid);
  display(simbol);

}

void RobotLine::linePitch() {

  if (pitch() < -10) {
    if (line(0) and line(8) or line(1) and line(7)) {
      go(100, 100);
      delayMs(250);
    }
    else if (line(8))
      go(10, 100);
    else if (line(0))
      go(100, 10);
    else if (line(7))
      go(20, 90);
    else if (line(1))
      go(90, 20);
    else if (line(6))
      go(60, 100);
    else if (line(2))
      go(100, 60);
    else if (line(5))
      go(80, 100);
    else if (line(3))
      go(100, 80);
    else if (line(4))
      go(100, 100);
    else
      go(100, 100);
  }
}



void RobotLine::lineFast() {
    if (line(8))
      go(-60, 80);
    else if (line(0))
      go(80, -60);
    else if (line(7))
      go(-15, 80);
    else if (line(1))
      go(80, -15);
    else if (line(6))
      go(45, 85);
    else if (line(2))
      go(85, 45);
    else if (line(5))
      go(70, 100);
    else if (line(3))
      go(100, 70);
    else if (line(4))
      go(100, 100);
}

void RobotLine::lineSlow() {
    if (line(8))
      go(-60, 100);
    else if (line(0))
      go(100, -60);
    else if (line(7))
      go(-20, 80);
    else if (line(1))
      go(80, -20);
    else if (line(6))
      go(5, 60);
    else if (line(2))
      go(60, 5);
    else if (line(5))
      go(30, 60);
    else if (line(3))
      go(60, 30);
    else if (line(4))
      go(60, 60);
}




void RobotLine::objectOnLine(int a) {
  if (a == 0)
    lineSlow();
  else if (a == 1)
    lineFast();
  if (front() < 150 and front() > 110) {
    stop();
    delayMs(20);
    if (front() < 150 and front() > 110) {
      stop();
      delayMs(20);
      if (front() < 150 and front() > 110) {
        stop();
        delayMs(20);

        if (front() < 140 and front() > 100) {
          go(70, -70);
          delayMs(500);
          // line 7 i 8 promijeni ako ides u drugu stranu
          while (!line(7) and !line(8)) {
            go(20, 70);
            noLoopWithoutThis();
          }
          go(70, 10);
          delayMs(400);

        }
      }
    }
  }
}


void RobotLine::ballCatch() {
  followWallLeft();
  if (frontRight() < 250 and frontRight() > 40) {
    go(60, 60);
    delayMs(800);
    go(90, -90);
    delayMs(500);
    go(20, 20);
    delayMs(3500);
    armCatch();
    stop();
    delayMs(200);
    go(-20, -20);
    delayMs(3500);
    go(-90, 90);
    delayMs(500);
    stop();
    end();
  }


}
void RobotLine::wallFollowRight() {
     armOpen();
    if (rightFront() > 120)
       go(90, 10);
     else
      go(10, 90);

  }

void RobotLine::wallFollowLeft(){
     armOpen();
    if (leftFront() > 120)
     go(10, 90);
   else
    go(90, 10);
}
void RobotLine::raskrizje(){
   if (line(0) && line(8)) {
    go((-90), 90);

  }

}

void RobotLine::pracenjeLinije(){
   if (line(8))
     go(-90, 90);
   else if (line(0))
    go(90, -90);
   else if (line(7))
    go(0, 100);
   else if (line(1))
    go(100, 0);
   else if (line(6))
    go(30, 80);
   else if (line(2))
    go(80, 30);
   else if (line(5))
    go(40, 70);
   else if (line(3))
    go(70, 40);
   else if (line(4))
    go(40, 40);
   else
    go(50, 50);
}
void RobotLine::AaBbCc()
{
  wallFollowLeft();
  if (frontRight() < 200) {
    go(90, -90);
    delayMs(200);
    armOpen();
    go(40, 40);
    delayMs(1500);
   armClose();
   stop();
   end();
  }

}
